{"version":3,"sources":["components/ContactForm/stylesContactForm.module.css","components/ContactList/stylesContactList.module.css","components/Label/stylesLabel.module.css","components/App.module.css","components/Label/Label.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App.jsx","index.js"],"names":["module","exports","Label","title","children","className","styles","label","INITIAL_STATE","name","phone","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","validateForm","id","uuid","resetForm","onCheckUnique","alert","this","onSubmit","form","type","placeholder","onChange","pattern","required","btnAddContact","Component","ContactListItem","onRemove","contactListItem","onClick","btnDelete","ContactList","contacts","length","map","contact","key","Filter","filter","App","handleAddContact","newContact","handleCheckUnique","isExistContact","find","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","localStorage","getItem","parcedContacts","JSON","parse","console","log","prevProps","prevState","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uIACAA,EAAOC,QAAU,CAAC,cAAgB,yCAAyC,KAAO,kC,iBCAlFD,EAAOC,QAAU,CAAC,UAAY,qCAAqC,gBAAkB,6C,iBCArFD,EAAOC,QAAU,CAAC,MAAQ,6B,gBCA1BD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,oB,6MCiBjCC,EAbD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACE,wBAAOC,UAAWC,IAAOC,MAAzB,UACE,6BAAKJ,IACJC,M,gBCFDI,EAAgB,CACpBC,KAAM,GACNC,MAAO,IAwEMC,E,4MApEbC,MAAQJ,E,EAERK,iBAAmB,YAAiB,IAAdC,EAAa,EAAbA,OACZL,EAAgBK,EAAhBL,KAAMM,EAAUD,EAAVC,MACd,EAAKC,SAAL,eAAiBP,EAAOM,K,EAG1BE,iBAAmB,SAAAC,GACjBA,EAAEC,iBADoB,MAGE,EAAKP,MAArBH,EAHc,EAGdA,KAAMC,EAHQ,EAGRA,MACNU,EAAU,EAAKC,MAAfD,MAEgB,EAAKE,iBAE7BF,EAAM,CAAEG,GAAIC,cAAQf,OAAMC,UAC1B,EAAKe,c,EAGPH,aAAe,WAAO,IAAD,EACK,EAAKV,MAArBH,EADW,EACXA,KAAMC,EADK,EACLA,MACNgB,EAAkB,EAAKL,MAAvBK,cACR,OAAKjB,GAASC,EAIPgB,EAAcjB,IAHnBkB,MAAM,wBACC,I,EAIXF,UAAY,WACV,EAAKT,SAASR,I,4CAEhB,WAAU,IAAD,EACiBoB,KAAKhB,MAArBH,EADD,EACCA,KAAMC,EADP,EACOA,MACd,OACE,uBAAMmB,SAAUD,KAAKX,iBAAkBZ,UAAWC,IAAOwB,KAAzD,UACE,cAAC,EAAD,CAAO3B,MAAM,OAAb,SACE,uBACE4B,KAAK,OACLtB,KAAK,OACLuB,YAAY,aACZjB,MAAON,EACPwB,SAAUL,KAAKf,iBACfqB,QAAQ,yHACR/B,MAAM,kcACNgC,UAAQ,MAIZ,cAAC,EAAD,CAAOhC,MAAO,SAAd,SACE,uBACE4B,KAAK,MACLtB,KAAK,QACLuB,YAAY,qBACZjB,MAAOL,EACPuB,SAAUL,KAAKf,iBACfqB,QAAQ,+FACR/B,MAAM,mlBACNgC,UAAQ,MAGZ,wBAAQJ,KAAK,SAAS1B,UAAWC,IAAO8B,cAAxC,gC,GA7DkBC,a,wBCTpBC,EAAkB,SAAC,GAAmC,IAAjCf,EAAgC,EAAhCA,GAAId,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAO6B,EAAe,EAAfA,SAC1C,OACE,qBAAIlC,UAAWC,IAAOkC,gBAAtB,UACG/B,EADH,KACWC,EAAO,IAChB,wBAAQ+B,QAAS,kBAAMF,EAAShB,IAAKlB,UAAWC,IAAOoC,UAAvD,wBA6BSC,EAtBK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUL,EAAe,EAAfA,SAC/B,OAAwB,IAApBK,EAASC,OAAqB,KAEhC,6BACGD,EAASE,KAAI,SAAAC,GAAO,OACnB,wBAAC,EAAD,2BAAqBA,GAArB,IAA8BR,SAAUA,EAAUS,IAAKD,EAAQxB,YCCxD0B,G,MAjBA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQjB,EAAe,EAAfA,SACxB,OACE,uBACEF,KAAK,OACLtB,KAAK,SACLM,MAAOmC,EACPjB,SAAU,gBAAGnB,EAAH,EAAGA,OAAH,OAAgBmB,EAASnB,EAAOC,QAC1CiB,YAAY,4B,iBCFGmB,E,4MACnBvC,MAAQ,CACNgC,SAAU,GACVM,OAAQ,I,EAGVE,iBAAmB,SAAAC,GAAU,OAC3B,EAAKrC,UAAS,gBAAG4B,EAAH,EAAGA,SAAH,MAAmB,CAAEA,SAAS,GAAD,mBAAMA,GAAN,CAAgBS,S,EAE7DC,kBAAoB,SAAA7C,GAAS,IAGrB8C,IAFe,EAAK3C,MAAlBgC,SAE0BY,MAAK,SAAAT,GAAO,OAAIA,EAAQtC,OAASA,KAEnE,OADA8C,GAAkB5B,MAAM,8BAChB4B,G,EAGVE,oBAAsB,SAAAlC,GAAE,OACtB,EAAKP,UAAS,kBAAmB,CAC/B4B,SADY,EAAGA,SACIM,QAAO,SAAAH,GAAO,OAAIA,EAAQxB,KAAOA,U,EAGxDmC,mBAAqB,SAAAR,GAAM,OAAI,EAAKlC,SAAS,CAAEkC,Y,EAE/CS,mBAAqB,WAAO,IAAD,EACI,EAAK/C,MAA1BgC,EADiB,EACjBA,SAAUM,EADO,EACPA,OAClB,OAAON,EAASM,QAAO,SAAAH,GAAO,OAC5BA,EAAQtC,KAAKmD,cAAcC,SAASX,EAAOU,mB,uDAI/C,WACE,IAAMhB,EAAWkB,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMtB,GAElCuB,QAAQC,IAAI,6BAA8BJ,GAEtCA,GACFpC,KAAKZ,SAAS,CAAE4B,SAAUoB,M,gCAI9B,SAAmBK,EAAWC,GACxB1C,KAAKhB,MAAMgC,WAAa0B,EAAU1B,WACpCkB,aAAaS,QAAQ,WAAYN,KAAKO,UAAU5C,KAAKhB,MAAMgC,WAC3DuB,QAAQC,IAAI,4BAA6BxC,KAAKhB,MAAMgC,a,oBAIxD,WAAU,IACAM,EAAWtB,KAAKhB,MAAhBsC,OACFuB,EAAkB7C,KAAK+B,qBAE7B,OACE,sBAAKtD,UAAWC,IAAO6C,IAAvB,UACE,2CACA,cAAC,EAAD,CACE/B,MAAOQ,KAAKwB,iBACZ1B,cAAeE,KAAK0B,oBAEtB,0CACA,cAAC,EAAD,CAAQJ,OAAQA,EAAQjB,SAAUL,KAAK8B,qBACvC,cAAC,EAAD,CACEd,SAAU6B,EACVlC,SAAUX,KAAK6B,6B,GAhEQpB,aCCjCqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1f3351c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnAddContact\":\"stylesContactForm_btnAddContact__3V5M5\",\"form\":\"stylesContactForm_form__3WC0-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"stylesContactList_btnDelete__2I-QO\",\"contactListItem\":\"stylesContactList_contactListItem__aktaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"stylesLabel_label__3jndX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__gYtZj\",\"Form\":\"App_Form__3Dep8\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './stylesLabel.module.css';\r\n\r\nconst Label = ({ title, children }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      <h3>{title}</h3>\r\n      {children}\r\n    </label>\r\n  );\r\n};\r\nLabel.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Label;\r\n","import { Component } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport Label from '../Label';\r\n\r\nimport styles from './stylesContactForm.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  phone: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = INITIAL_STATE;\r\n\r\n  handleChangeForm = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, phone } = this.state;\r\n    const { onAdd } = this.props;\r\n\r\n    const isValidatedForm = this.validateForm();\r\n    if (!isValidatedForm) return;\r\n    onAdd({ id: uuid(), name, phone });\r\n    this.resetForm();\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { name, phone } = this.state;\r\n    const { onCheckUnique } = this.props;\r\n    if (!name || !phone) {\r\n      alert('Some field is empty');\r\n      return false;\r\n    }\r\n    return onCheckUnique(name);\r\n  };\r\n  resetForm = () => {\r\n    this.setState(INITIAL_STATE);\r\n  };\r\n  render() {\r\n    const { name, phone } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleFormSubmit} className={styles.form}>\r\n        <Label title=\"Name\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={this.handleChangeForm}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </Label>\r\n\r\n        <Label title={'Number'}>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"phone\"\r\n            placeholder=\"Enter phone number\"\r\n            value={phone}\r\n            onChange={this.handleChangeForm}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </Label>\r\n        <button type=\"submit\" className={styles.btnAddContact}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import styles from './stylesContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactListItem = ({ id, name, phone, onRemove }) => {\r\n  return (\r\n    <li className={styles.contactListItem}>\r\n      {name}: {phone}{' '}\r\n      <button onClick={() => onRemove(id)} className={styles.btnDelete}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst ContactList = ({ contacts, onRemove }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <ContactListItem {...contact} onRemove={onRemove} key={contact.id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import styles from './stylesFilter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={filter}\r\n      onChange={({ target }) => onChange(target.value)}\r\n      placeholder=\"Enter name for search\"\r\n    />\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\r\n\r\nimport ContactForm from './ContactForm';\r\nimport ContactList from './ContactList';\r\nimport Filter from './Filter';\r\n\r\nimport styles from './App.module.css';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  handleAddContact = newContact =>\r\n    this.setState(({ contacts }) => ({ contacts: [...contacts, newContact] }));\r\n\r\n  handleCheckUnique = name => {\r\n    const { contacts } = this.state;\r\n\r\n    const isExistContact = !!contacts.find(contact => contact.name === name);\r\n    isExistContact && alert('Contact is already exists');\r\n    return !isExistContact;\r\n  };\r\n\r\n  handleRemoveContact = id =>\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter(contact => contact.id !== id),\r\n    }));\r\n\r\n  handleFilterChange = filter => this.setState({ filter });\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n  //==================Home Work 03==================================\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parcedContacts = JSON.parse(contacts);\r\n\r\n    console.log('contacts from localStorage', parcedContacts);\r\n\r\n    if (parcedContacts) {\r\n      this.setState({ contacts: parcedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n      console.log('view updated localStorage', this.state.contacts);\r\n    }\r\n  }\r\n  //================================================================\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <div className={styles.App}>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm\r\n          onAdd={this.handleAddContact}\r\n          onCheckUnique={this.handleCheckUnique}\r\n        />\r\n        <h2>Contacts</h2>\r\n        <Filter filter={filter} onChange={this.handleFilterChange} />\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onRemove={this.handleRemoveContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './styles.css';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nimport App from './components/App';\r\n// import App from './components/App_Old';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}